#ifndef __STATE_FLAGS_HPP__
#define __STATE_FLAGS_HPP__

namespace state_machine
{
enum StateFlags_index
{
  NULL_STATE_INDEX = 0,
  START_STATE_INDEX = 1,
  INITIAL_STATE_INDEX = 2,
  LOCATEVEHICLE_STATE_INDEX = 3,
  VEHICLE_READY_STATE_INDEX = 4,
  DRIVE_READY_STATE_INDEX = 5,
  DRIVE_STATE_INDEX = 6,
  MISSION_COMPLETE_STATE_INDEX = 7,
  EMERGENCY_STATE_INDEX = 8,

  DRIVE_SUB_STATE_START_INDEX = 10,

  DRIVE_ACC_ACCELERATION_STATE_INDEX = 11,
  DRIVE_ACC_DECELERATION_STATE_INDEX = 12,
  DRIVE_ACC_KEEP_STATE_INDEX = 13,
  DRIVE_ACC_STOP_STATE_INDEX = 14,
  DRIVE_ACC_STOPLINE_STATE_INDEX = 15,
  DRIVE_ACC_CRAWL_STATE_INDEX = 16,

  DRIVE_STR_STRAIGHT_STATE_INDEX = 21,
  DRIVE_STR_LEFT_STATE_INDEX = 22,
  DRIVE_STR_RIGHT_STATE_INDEX = 23,

  DRIVE_BEHAVIOR_LANECHANGE_LEFT_STATE_INDEX = 31,
  DRIVE_BEHAVIOR_LANECHANGE_RIGHT_STATE_INDEX = 32,
  DRIVE_BEHAVIOR_OBSTACLE_AVOIDANCE_STATE_INDEX = 33,
  DRIVE_BEHAVIOR_TRAFFICLIGHT_RED_STATE_INDEX = 34,
  DRIVE_BEHAVIOR_TRAFFICLIGHT_GREEN_STATE_INDEX = 35,
  DRIVE_BEHAVIOR_STOPLINE_PLAN_STATE_INDEX = 36,
  DRIVE_BEHAVIOR_ACCEPT_LANECHANGE_STATE_INDEX = 37,
  STATE_SUB_END_INDEX = 40,
  STATE_END_INDEX = 41,

};

enum StateFlags
{
  NULL_STATE = 1ULL << NULL_STATE_INDEX,
  START_STATE = 1ULL << START_STATE_INDEX,
  INITIAL_STATE = 1ULL << INITIAL_STATE_INDEX,
  LOCATEVEHICLE_STATE = 1ULL << LOCATEVEHICLE_STATE_INDEX,
  VEHICLE_READY_STATE = 1ULL << VEHICLE_READY_STATE_INDEX,
  DRIVE_READY_STATE = 1ULL << DRIVE_READY_STATE_INDEX,
  DRIVE_STATE = 1ULL << DRIVE_STATE_INDEX,
  MISSION_COMPLETE_STATE = 1ULL << MISSION_COMPLETE_STATE_INDEX,
  EMERGENCY_STATE = 1ULL << EMERGENCY_STATE_INDEX,

  DRIVE_SUB_STATE_START = 1ULL << DRIVE_SUB_STATE_START_INDEX,

  DRIVE_ACC_ACCELERATION_STATE = 1ULL << DRIVE_ACC_ACCELERATION_STATE_INDEX,
  DRIVE_ACC_DECELERATION_STATE = 1ULL << DRIVE_ACC_DECELERATION_STATE_INDEX,
  DRIVE_ACC_KEEP_STATE = 1ULL << DRIVE_ACC_KEEP_STATE_INDEX,
  DRIVE_ACC_STOP_STATE = 1ULL << DRIVE_ACC_STOP_STATE_INDEX,
  DRIVE_ACC_STOPLINE_STATE = 1ULL << DRIVE_ACC_STOPLINE_STATE_INDEX,
  DRIVE_ACC_CRAWL_STATE = 1ULL << DRIVE_ACC_CRAWL_STATE_INDEX,

  DRIVE_STR_STRAIGHT_STATE = 1ULL << DRIVE_STR_STRAIGHT_STATE_INDEX,
  DRIVE_STR_LEFT_STATE = 1ULL << DRIVE_STR_LEFT_STATE_INDEX,
  DRIVE_STR_RIGHT_STATE = 1ULL << DRIVE_STR_RIGHT_STATE_INDEX,

  DRIVE_BEHAVIOR_LANECHANGE_LEFT_STATE = 1ULL << DRIVE_BEHAVIOR_LANECHANGE_LEFT_STATE_INDEX,
  DRIVE_BEHAVIOR_LANECHANGE_RIGHT_STATE = 1ULL << DRIVE_BEHAVIOR_LANECHANGE_RIGHT_STATE_INDEX,
  DRIVE_BEHAVIOR_OBSTACLE_AVOIDANCE_STATE = 1ULL << DRIVE_BEHAVIOR_OBSTACLE_AVOIDANCE_STATE_INDEX,
  DRIVE_BEHAVIOR_TRAFFICLIGHT_RED_STATE = 1ULL << DRIVE_BEHAVIOR_TRAFFICLIGHT_RED_STATE_INDEX,
  DRIVE_BEHAVIOR_TRAFFICLIGHT_GREEN_STATE = 1ULL << DRIVE_BEHAVIOR_TRAFFICLIGHT_GREEN_STATE_INDEX,
  DRIVE_BEHAVIOR_STOPLINE_PLAN_STATE = 1ULL << DRIVE_BEHAVIOR_STOPLINE_PLAN_STATE_INDEX,
  DRIVE_BEHAVIOR_ACCEPT_LANECHANGE_STATE = 1ULL << DRIVE_BEHAVIOR_ACCEPT_LANECHANGE_STATE_INDEX,
  STATE_SUB_END = 1ULL << STATE_SUB_END_INDEX,
  STATE_END = 1ULL << STATE_END_INDEX,
};

enum StateKinds
{
  MAIN_STATE = 1,
  ACC_STATE = 2,
  STR_STATE = 3,
  BEHAVIOR_STATE = 4,
  PERCEPTION_STATE = 5,
  OTHER_STATE = 6,
  UNKNOWN_STATE = 7,
};

enum TrafficLightColors
{
  E_RED = 0,
  E_YELLOW = 0,
  E_GREEN = 1,
  E_COLOR_ERROR = 2
};
}

#endif
